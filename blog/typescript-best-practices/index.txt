2:I[7024,["972","static/chunks/972-fe6ab53755556f79.js","308","static/chunks/app/blog/%5Bslug%5D/page-c05f01d483272f93.js"],"default"]
3:I[8743,["972","static/chunks/972-fe6ab53755556f79.js","308","static/chunks/app/blog/%5Bslug%5D/page-c05f01d483272f93.js"],"default"]
6:I[2972,["972","static/chunks/972-fe6ab53755556f79.js","308","static/chunks/app/blog/%5Bslug%5D/page-c05f01d483272f93.js"],""]
7:I[4707,[],""]
9:I[6423,[],""]
a:I[5495,["972","static/chunks/972-fe6ab53755556f79.js","185","static/chunks/app/layout-319be4de2de473bb.js"],"ThemeProvider"]
b:I[3170,["972","static/chunks/972-fe6ab53755556f79.js","185","static/chunks/app/layout-319be4de2de473bb.js"],"default"]
4:Tb90,<h1>TypeScript Best Practices for Modern Development</h1>
<p>TypeScript has become an essential tool for JavaScript developers, providing static type checking and enhanced developer experience. In this article, we'll explore best practices that will help you write better TypeScript code.</p>
<h2>Why TypeScript?</h2>
<p>TypeScript offers several advantages over plain JavaScript:</p>
<ul>
<li><strong>Static Type Checking</strong>: Catch errors at compile time</li>
<li><strong>Better IDE Support</strong>: Enhanced autocomplete and refactoring</li>
<li><strong>Improved Code Documentation</strong>: Types serve as documentation</li>
<li><strong>Easier Refactoring</strong>: Confident code changes with type safety</li>
</ul>
<h2>Essential Best Practices</h2>
<h3>1. Use Strict Mode</h3>
<p>Always enable strict mode in your <code>tsconfig.json</code>:</p>
<pre><code class="language-json">{
  "compilerOptions": {
    "strict": true,
    "noImplicitAny": true,
    "strictNullChecks": true,
    "strictFunctionTypes": true
  }
}
</code></pre>
<h3>2. Prefer Type Annotations Over Type Assertions</h3>
<pre><code class="language-typescript">// Good
const user: User = getUserData()

// Avoid
const user = getUserData() as User
</code></pre>
<h3>3. Use Union Types Instead of Any</h3>
<pre><code class="language-typescript">// Good
type Status = 'loading' | 'success' | 'error'

// Avoid
type Status = any
</code></pre>
<h3>4. Leverage Utility Types</h3>
<p>TypeScript provides powerful utility types:</p>
<pre><code class="language-typescript">interface User {
  id: number
  name: string
  email: string
  age?: number
}

// Pick specific properties
type UserSummary = Pick&#x3C;User, 'id' | 'name'>

// Make all properties optional
type PartialUser = Partial&#x3C;User>

// Make all properties required
type RequiredUser = Required&#x3C;User>
</code></pre>
<h2>Advanced Patterns</h2>
<h3>Generic Constraints</h3>
<p>Use generic constraints to limit type parameters:</p>
<pre><code class="language-typescript">interface Lengthwise {
  length: number
}

function logLength&#x3C;T extends Lengthwise>(arg: T): T {
  console.log(arg.length)
  return arg
}
</code></pre>
<h3>Conditional Types</h3>
<p>Create types that depend on conditions:</p>
<pre><code class="language-typescript">type ApiResponse&#x3C;T> = T extends string
  ? { message: T }
  : { data: T }
</code></pre>
<h2>Common Pitfalls to Avoid</h2>
<ol>
<li><strong>Overusing <code>any</code></strong>: Defeats the purpose of TypeScript</li>
<li><strong>Ignoring compiler errors</strong>: Address warnings promptly</li>
<li><strong>Not using strict mode</strong>: Misses many type safety benefits</li>
<li><strong>Complex type definitions</strong>: Keep types simple and readable</li>
</ol>
<h2>Conclusion</h2>
<p>Following these TypeScript best practices will help you write more maintainable and type-safe code. Start implementing these patterns gradually in your projects for the best results.</p>
5:Tb90,<h1>TypeScript Best Practices for Modern Development</h1>
<p>TypeScript has become an essential tool for JavaScript developers, providing static type checking and enhanced developer experience. In this article, we'll explore best practices that will help you write better TypeScript code.</p>
<h2>Why TypeScript?</h2>
<p>TypeScript offers several advantages over plain JavaScript:</p>
<ul>
<li><strong>Static Type Checking</strong>: Catch errors at compile time</li>
<li><strong>Better IDE Support</strong>: Enhanced autocomplete and refactoring</li>
<li><strong>Improved Code Documentation</strong>: Types serve as documentation</li>
<li><strong>Easier Refactoring</strong>: Confident code changes with type safety</li>
</ul>
<h2>Essential Best Practices</h2>
<h3>1. Use Strict Mode</h3>
<p>Always enable strict mode in your <code>tsconfig.json</code>:</p>
<pre><code class="language-json">{
  "compilerOptions": {
    "strict": true,
    "noImplicitAny": true,
    "strictNullChecks": true,
    "strictFunctionTypes": true
  }
}
</code></pre>
<h3>2. Prefer Type Annotations Over Type Assertions</h3>
<pre><code class="language-typescript">// Good
const user: User = getUserData()

// Avoid
const user = getUserData() as User
</code></pre>
<h3>3. Use Union Types Instead of Any</h3>
<pre><code class="language-typescript">// Good
type Status = 'loading' | 'success' | 'error'

// Avoid
type Status = any
</code></pre>
<h3>4. Leverage Utility Types</h3>
<p>TypeScript provides powerful utility types:</p>
<pre><code class="language-typescript">interface User {
  id: number
  name: string
  email: string
  age?: number
}

// Pick specific properties
type UserSummary = Pick&#x3C;User, 'id' | 'name'>

// Make all properties optional
type PartialUser = Partial&#x3C;User>

// Make all properties required
type RequiredUser = Required&#x3C;User>
</code></pre>
<h2>Advanced Patterns</h2>
<h3>Generic Constraints</h3>
<p>Use generic constraints to limit type parameters:</p>
<pre><code class="language-typescript">interface Lengthwise {
  length: number
}

function logLength&#x3C;T extends Lengthwise>(arg: T): T {
  console.log(arg.length)
  return arg
}
</code></pre>
<h3>Conditional Types</h3>
<p>Create types that depend on conditions:</p>
<pre><code class="language-typescript">type ApiResponse&#x3C;T> = T extends string
  ? { message: T }
  : { data: T }
</code></pre>
<h2>Common Pitfalls to Avoid</h2>
<ol>
<li><strong>Overusing <code>any</code></strong>: Defeats the purpose of TypeScript</li>
<li><strong>Ignoring compiler errors</strong>: Address warnings promptly</li>
<li><strong>Not using strict mode</strong>: Misses many type safety benefits</li>
<li><strong>Complex type definitions</strong>: Keep types simple and readable</li>
</ol>
<h2>Conclusion</h2>
<p>Following these TypeScript best practices will help you write more maintainable and type-safe code. Start implementing these patterns gradually in your projects for the best results.</p>
8:["slug","typescript-best-practices","d"]
0:["6PDyOYyXdnkkoKKct7d28",[[["",{"children":["blog",{"children":[["slug","typescript-best-practices","d"],{"children":["__PAGE__?{\"slug\":\"typescript-best-practices\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","typescript-best-practices","d"],{"children":["__PAGE__",{},[["$L1",["$","article",null,{"className":"max-w-4xl mx-auto","children":[["$","header",null,{"className":"mb-8","children":[["$","div",null,{"className":"mb-4","children":[["$","div",null,{"className":"flex flex-wrap gap-2 mb-4","children":[["$","span","Development",{"className":"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium","children":"Development"}],["$","span","TypeScript",{"className":"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium","children":"TypeScript"}]]}],["$","h1",null,{"className":"text-4xl md:text-5xl font-bold mb-4 leading-tight","children":"TypeScript Best Practices for Modern Development"}],["$","p",null,{"className":"text-xl text-gray-600 dark:text-gray-300 mb-6","children":"Discover essential TypeScript best practices that will help you write more maintainable, type-safe code and avoid common pitfalls."}],["$","div",null,{"className":"flex flex-wrap items-center gap-6 text-sm text-gray-600 dark:text-gray-300","children":[["$","div",null,{"className":"flex items-center gap-2","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":16,"height":16,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-user ","children":[["$","path","975kel",{"d":"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2"}],["$","circle","17ys0d",{"cx":"12","cy":"7","r":"4"}],"$undefined"]}],["$","span",null,{"children":"Ed Fazli"}]]}],["$","div",null,{"className":"flex items-center gap-2","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":16,"height":16,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-calendar ","children":[["$","rect","eu3xkr",{"width":"18","height":"18","x":"3","y":"4","rx":"2","ry":"2"}],["$","line","m3sa8f",{"x1":"16","x2":"16","y1":"2","y2":"6"}],["$","line","18kwsl",{"x1":"8","x2":"8","y1":"2","y2":"6"}],["$","line","xt86sb",{"x1":"3","x2":"21","y1":"10","y2":"10"}],"$undefined"]}],["$","time",null,{"dateTime":"2024-01-10","children":"January 10, 2024"}]]}],["$","div",null,{"className":"flex items-center gap-2","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":16,"height":16,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-clock ","children":[["$","circle","1mglay",{"cx":"12","cy":"12","r":"10"}],["$","polyline","68esgv",{"points":"12 6 12 12 16 14"}],"$undefined"]}],["$","span",null,{"children":[2," min read"]}]]}]]}]]}],["$","$L2",null,{"title":"TypeScript Best Practices for Modern Development","url":"/blog/typescript-best-practices"}]]}],["$","div",null,{"className":"grid lg:grid-cols-4 gap-8","children":[["$","aside",null,{"className":"lg:col-span-1","children":["$","div",null,{"className":"sticky top-8","children":["$","$L3",null,{"content":"$4"}]}]}],["$","div",null,{"className":"lg:col-span-3","children":[["$","div",null,{"className":"prose-custom","dangerouslySetInnerHTML":{"__html":"$5"}}],["$","div",null,{"className":"mt-8 pt-8 border-t border-gray-200 dark:border-gray-700","children":[["$","div",null,{"className":"flex items-center gap-2 mb-4","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":16,"height":16,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-tag ","children":[["$","path","14b2ls",{"d":"M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z"}],["$","path","7u93v4",{"d":"M7 7h.01"}],"$undefined"]}],["$","span",null,{"className":"font-medium","children":"Tags"}]]}],["$","div",null,{"className":"flex flex-wrap gap-2","children":[["$","span","typescript",{"className":"px-3 py-1 bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 rounded-full text-sm","children":["#","typescript"]}],["$","span","javascript",{"className":"px-3 py-1 bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 rounded-full text-sm","children":["#","javascript"]}],["$","span","best-practices",{"className":"px-3 py-1 bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 rounded-full text-sm","children":["#","best-practices"]}],["$","span","type-safety",{"className":"px-3 py-1 bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 rounded-full text-sm","children":["#","type-safety"]}]]}]]}],["$","div",null,{"className":"mt-8 pt-8 border-t border-gray-200 dark:border-gray-700","children":[["$","h3",null,{"className":"text-lg font-semibold mb-4","children":"Share this post"}],["$","$L2",null,{"title":"TypeScript Best Practices for Modern Development","url":"/blog/typescript-best-practices"}]]}]]}]]}],["$","div",null,{"className":"mt-16 pt-8 border-t border-gray-200 dark:border-gray-700","children":["$","section",null,{"children":[["$","h2",null,{"className":"text-2xl font-bold mb-6","children":"Related Posts"}],["$","div",null,{"className":"grid md:grid-cols-2 lg:grid-cols-3 gap-6","children":[["$","article","getting-started-with-nextjs",{"className":"card group hover:shadow-lg transition-shadow duration-300","children":[["$","div",null,{"className":"flex flex-wrap gap-2 mb-3","children":[["$","span","Development",{"className":"px-2 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded text-xs font-medium","children":"Development"}],["$","span","React",{"className":"px-2 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded text-xs font-medium","children":"React"}]]}],["$","h3",null,{"className":"text-lg font-semibold mb-2 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors","children":["$","$L6",null,{"href":"/blog/getting-started-with-nextjs","children":"Getting Started with Next.js: A Complete Guide"}]}],["$","p",null,{"className":"text-gray-600 dark:text-gray-300 text-sm mb-3 line-clamp-2","children":"Learn how to build modern web applications with Next.js, from setup to deployment. This comprehensive guide covers everything you need to know."}],["$","div",null,{"className":"flex items-center justify-between text-xs text-gray-500 dark:text-gray-400 mb-3","children":[["$","div",null,{"className":"flex items-center gap-1","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":12,"height":12,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-calendar ","children":[["$","rect","eu3xkr",{"width":"18","height":"18","x":"3","y":"4","rx":"2","ry":"2"}],["$","line","m3sa8f",{"x1":"16","x2":"16","y1":"2","y2":"6"}],["$","line","18kwsl",{"x1":"8","x2":"8","y1":"2","y2":"6"}],["$","line","xt86sb",{"x1":"3","x2":"21","y1":"10","y2":"10"}],"$undefined"]}],["$","time",null,{"dateTime":"2024-01-15","children":"January 15, 2024"}]]}],["$","span",null,{"children":[5," min read"]}]]}],["$","$L6",null,{"href":"/blog/getting-started-with-nextjs","className":"inline-flex items-center gap-1 text-primary-600 dark:text-primary-400 hover:text-primary-700 dark:hover:text-primary-300 text-sm font-medium group-hover:gap-2 transition-all duration-200","children":["Read more",["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":14,"height":14,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-arrow-right ","children":[["$","path","1ays0h",{"d":"M5 12h14"}],["$","path","xquz4c",{"d":"m12 5 7 7-7 7"}],"$undefined"]}]]}]]}]]}]]}]}]]}],null],null],null]},[null,["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$8","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/733426d4be4ebfb7.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","link",null,{"rel":"icon","href":"/images/favicon.svg","type":"image/svg+xml"}],["$","link",null,{"rel":"apple-touch-icon","href":"/images/logo-icon.svg"}]]}],["$","body",null,{"className":"__variable_f367f3 __variable_3c557b font-sans","children":["$","$La",null,{"attribute":"class","defaultTheme":"system","enableSystem":true,"children":["$","div",null,{"className":"min-h-screen bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100","children":[["$","$Lb",null,{}],["$","main",null,{"className":"container mx-auto px-4 py-8","children":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]}],["$","footer",null,{"className":"bg-gray-50 dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700 mt-16","children":["$","div",null,{"className":"container mx-auto px-4 py-12","children":[["$","div",null,{"className":"grid md:grid-cols-4 gap-8","children":[["$","div",null,{"className":"md:col-span-2","children":[["$","$L6",null,{"href":"/","className":"flex items-center gap-3 mb-4 hover:opacity-80 transition-opacity","children":[["$","img",null,{"src":"/images/logo-icon.svg","alt":"Ed Fazli Logo","className":"w-8 h-8"}],["$","span",null,{"className":"text-2xl font-bold gradient-text","children":"Ed Fazli"}]]}],["$","p",null,{"className":"text-gray-600 dark:text-gray-300 mb-4 max-w-md","children":"Software engineer passionate about building scalable solutions and sharing knowledge through technical writing."}],["$","div",null,{"className":"flex space-x-4","children":[["$","a",null,{"href":"https://github.com/edfazli","target":"_blank","rel":"noopener noreferrer","className":"text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors","aria-label":"GitHub","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":20,"height":20,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-github ","children":[["$","path","tonef",{"d":"M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4"}],["$","path","9comsn",{"d":"M9 18c-4.51 2-5-2-7-2"}],"$undefined"]}]}],["$","a",null,{"href":"https://linkedin.com/in/edfazli","target":"_blank","rel":"noopener noreferrer","className":"text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors","aria-label":"LinkedIn","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":20,"height":20,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-linkedin ","children":[["$","path","c2jq9f",{"d":"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"}],["$","rect","mk3on5",{"width":"4","height":"12","x":"2","y":"9"}],["$","circle","bt5ra8",{"cx":"4","cy":"4","r":"2"}],"$undefined"]}]}],["$","a",null,{"href":"mailto:ed@example.com","className":"text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors","aria-label":"Email","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":20,"height":20,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-mail ","children":[["$","rect","18n3k1",{"width":"20","height":"16","x":"2","y":"4","rx":"2"}],["$","path","1ocrg3",{"d":"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"}],"$undefined"]}]}],["$","a",null,{"href":"/rss.xml","className":"text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors","aria-label":"RSS Feed","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":20,"height":20,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-rss ","children":[["$","path","pv89mb",{"d":"M4 11a9 9 0 0 1 9 9"}],["$","path","k0647b",{"d":"M4 4a16 16 0 0 1 16 16"}],["$","circle","bfqh0e",{"cx":"5","cy":"19","r":"1"}],"$undefined"]}]}]]}]]}],["$","div",null,{"children":[["$","h3",null,{"className":"font-semibold mb-4","children":"Quick Links"}],["$","ul",null,{"className":"space-y-2","children":[["$","li",null,{"children":["$","$L6",null,{"href":"/","className":"text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors","children":"Home"}]}],["$","li",null,{"children":["$","$L6",null,{"href":"/blog","className":"text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors","children":"Blog"}]}],["$","li",null,{"children":["$","$L6",null,{"href":"/about","className":"text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors","children":"About"}]}],["$","li",null,{"children":["$","$L6",null,{"href":"/contact","className":"text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors","children":"Contact"}]}]]}]]}],["$","div",null,{"children":[["$","h3",null,{"className":"font-semibold mb-4","children":"Categories"}],["$","ul",null,{"className":"space-y-2","children":[["$","li",null,{"children":["$","$L6",null,{"href":"/blog?category=development","className":"text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors","children":"Development"}]}],["$","li",null,{"children":["$","$L6",null,{"href":"/blog?category=cloud","className":"text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors","children":"Cloud Computing"}]}],["$","li",null,{"children":["$","$L6",null,{"href":"/blog?category=tutorials","className":"text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors","children":"Tutorials"}]}],["$","li",null,{"children":["$","$L6",null,{"href":"/blog?category=career","className":"text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors","children":"Career"}]}]]}]]}]]}],["$","div",null,{"className":"border-t border-gray-200 dark:border-gray-700 mt-8 pt-8 text-center","children":["$","p",null,{"className":"text-gray-600 dark:text-gray-300","children":["© ",2025," Ed Fazli. All rights reserved. Built with Next.js and deployed on GitHub Pages."]}]}]]}]}]]}]}]}]]}]],null],null],["$Lc",null]]]]
c:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"TypeScript Best Practices for Modern Development | Syed Fazli"}],["$","meta","3",{"name":"description","content":"Discover essential TypeScript best practices that will help you write more maintainable, type-safe code and avoid common pitfalls."}],["$","meta","4",{"name":"author","content":"Ed Fazli"}],["$","meta","5",{"name":"keywords","content":"typescript,javascript,best-practices,type-safety"}],["$","meta","6",{"name":"creator","content":"Syed Fazli"}],["$","meta","7",{"name":"robots","content":"index, follow"}],["$","meta","8",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","meta","9",{"property":"og:title","content":"TypeScript Best Practices for Modern Development"}],["$","meta","10",{"property":"og:description","content":"Discover essential TypeScript best practices that will help you write more maintainable, type-safe code and avoid common pitfalls."}],["$","meta","11",{"property":"og:type","content":"article"}],["$","meta","12",{"property":"article:published_time","content":"2024-01-10"}],["$","meta","13",{"property":"article:author","content":"Ed Fazli"}],["$","meta","14",{"property":"article:tag","content":"typescript"}],["$","meta","15",{"property":"article:tag","content":"javascript"}],["$","meta","16",{"property":"article:tag","content":"best-practices"}],["$","meta","17",{"property":"article:tag","content":"type-safety"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"TypeScript Best Practices for Modern Development"}],["$","meta","20",{"name":"twitter:description","content":"Discover essential TypeScript best practices that will help you write more maintainable, type-safe code and avoid common pitfalls."}],["$","link","21",{"rel":"shortcut icon","href":"/images/favicon.svg"}],["$","link","22",{"rel":"icon","href":"/images/favicon.svg"}],["$","link","23",{"rel":"apple-touch-icon","href":"/images/logo-icon.svg"}],["$","meta","24",{"name":"next-size-adjust"}]]
1:null
